{"version":3,"file":"static/js/134.e59b964b.chunk.js","mappings":"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","sources":["api/fetchData.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ItemMovie/ItemMovie.styled.jsx","components/ItemMovie/ItemMovie.jsx","components/ListMovies/ListMovies.jsx","components/ListMovies/ListMovies.styled.jsx","components/Loader/Loader.jsx","components/Notification/Notification.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchTrendMovie(pageNumber, controller) {\n  const API_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  // параметри запиту на бекенд\n  const options = {\n    signal: controller.signal,\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n      page: pageNumber,\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchMovieByName(query, pageNumber) {\n  const API_URL = 'https://api.themoviedb.org/3/search/movie';\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      query,\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n      page: pageNumber,\n      include_adult: false,\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchMovieById(movieId) {\n  const API_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchCastById(movieId) {\n  const API_URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchReviewsById(movieId) {\n  const API_URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchActors(query, pageNumber) {\n  const API_URL = query\n    ? 'https://api.themoviedb.org/3/search/person'\n    : 'https://api.themoviedb.org/3/person/popular';\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      query,\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n      page: pageNumber,\n      include_adult: false,\n    },\n  };\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n","import styled from 'styled-components';\n\nexport const BtnLoadMore = styled.button`\n  width: 150px;\n  text-align: center;\n  font-weight: 500;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  padding: 8px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 5px;\n  border: none;\n  background-color: ${p => p.theme.colors.accentLight};\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.accentDark};\n    color: #fff;\n    box-shadow: -2px -2px 5px #fff,\n      2px 2px 5px ${p => p.theme.colors.accentDark};\n  }\n`;\n","import { BtnLoadMore } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ loadMore }) => {\n  return <BtnLoadMore onClick={loadMore}>Load more</BtnLoadMore>;\n};\n\nButton.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-width: 350px;\n  cursor: pointer;\n  text-align: center;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  > p {\n    padding-top: 8px;\n    padding-bottom: 8px;\n    color: ${p => p.theme.colors.accentDark};\n    background-color: #fff;\n    font-weight: 700;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n\n  /* height: 200px; */\n  /* object-fit: cover; */\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Img, StyledLink } from './ItemMovie.styled';\nimport defaultImage from '../../images/no-poster.png';\n// import { useLocation } from 'react-router-dom';\n\nexport const ItemMovie = ({ item, state }) => {\n  // const location = useLocation();\n  // console.log(location);\n\n  const posterPath = item.poster_path\n    ? `https://image.tmdb.org/t/p/original${item.poster_path}`\n    : defaultImage;\n\n  return (\n    //  посилання на сторінку фільму\n    <StyledLink to={`/movies/${item.id}`} state={state}>\n      <Item>\n        <p>\n          <span>{item.title.slice(0, 32)}</span> |\n          <span>{item.release_date.slice(0, 4)}</span>\n        </p>\n        <Img src={posterPath} alt={item.title} />\n      </Item>\n    </StyledLink>\n  );\n};\n\nItemMovie.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { List } from './ListMovies.styled';\nimport { ItemMovie } from 'components/ItemMovie/ItemMovie';\n\nexport const ListMovie = ({ movies, state }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <ItemMovie key={movie.id} item={movie} state={state} />\n      ))}\n    </List>\n  );\n};\n\nListMovie.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const Alert = styled.p`\n  position: absolute;\n  top: 140px;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: ${props => props.theme.colors.accentLight};\n  padding: 20px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 20px;\n  font-style: italic;\n  color: ${props => props.theme.colors.error};\n`;\n","import { Dna } from 'react-loader-spinner';\n\nexport const Loader = ({ isLoading }) => {\n  return (\n    <Dna\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{\n        display: 'block',\n        marginTop: '5px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      }}\n    />\n  );\n};\n","export const notificationMassege = 'Please enter something for seach.';\n\nexport const notificationOptions = {\n  position: 'top-center',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark',\n};\n","import styled from 'styled-components';\n\nexport const SearchbarWrap = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  margin-bottom: 16px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: ${p => p.theme.colors.accentDark};\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 8px;\n  padding-right: 8px;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n    font-style: italic;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n\n  :hover svg {\n    fill: ${props => props.theme.colors.accentDark};\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    transform: scale(1.1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BiSearch } from 'react-icons/bi';\nimport {\n  SearchbarWrap,\n  SearchBtn,\n  SearchForm,\n  SearchInput,\n} from './Searchbar.styled';\nimport { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  notificationMassege,\n  notificationOptions,\n} from '../Notification/Notification';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [textQuery, setTextQuery] = useState('');\n\n  const onChangeInput = e => {\n    setTextQuery(e.currentTarget.value.trim().toLowerCase());\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    // уведомление\n    if (textQuery === '') {\n      toast.error(`${notificationMassege}`, notificationOptions);\n    }\n    //фун-я onSubmit пришла из App через пропсы\n    onSubmit(textQuery);\n    //очистка строки поиска\n    setTextQuery('');\n  };\n\n  return (\n    <SearchbarWrap>\n      <SearchForm onSubmit={onSubmitForm}>\n        <SearchBtn type=\"submit\">\n          <BiSearch size=\"24\" />\n        </SearchBtn>\n\n        <SearchInput\n          value={textQuery}\n          onChange={onChangeInput}\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies by name\"\n        />\n      </SearchForm>\n      <ToastContainer />\n    </SearchbarWrap>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { fetchMovieByName } from 'api/fetchData';\nimport { Button } from 'components/Button/Button';\nimport { ListMovie } from 'components/ListMovies/ListMovies';\nimport { Alert } from 'components/ListMovies/ListMovies.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { useEffect, useState } from 'react';\nimport ScrollToTop from 'react-scroll-to-top';\nimport { toast } from 'react-toastify';\nimport { notificationOptions } from '../components/Notification/Notification';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  // const [textQuery, setTextQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [totalPage, setTotalPage] = useState(null);\n\n  //Для читання та зміни рядка запиту у React Router є хук useSearchParams, який є невеликою обгорткою над вбудованим у браузер класом URLSearchParams.\n  //Він повертає масив із двох значень: об'єкт параметрів рядка запиту (примірник URLSearchParams) для поточного URL та функцію оновлення рядка запиту. Для отримання значень параметрів є метод URLSearchParams.get(key), який чекає на ім'я параметра і повертає його значення або null якщо у рядку запиту немає такого параметра.\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  //Повертає об'єкт розташування, що представляє поточний URL, щоразу коли ми переходимо новим маршрутом або оновлюємо частину поточного URL.\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    const textQuery = searchParams.get('query') ?? '';\n    if (!textQuery) {\n      return;\n    }\n    const getMovieByName = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const response = await fetchMovieByName(textQuery, pageNumber);\n        console.log(response.data);\n        if (response.data.results.length === 0) {\n          toast.error(\n            `Sorry, there are no find movie with this name. Please try again.`,\n            notificationOptions\n          );\n          return;\n        }\n        setMovies(prev => [...prev, ...response.data.results]);\n        setTotalPage(response.data.total_pages);\n      } catch (error) {\n        setTotalPage(null);\n        setMovies([]);\n        setError(error.message);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieByName();\n  }, [searchParams, pageNumber]);\n\n  // записываем запрос поиска из Searchbar\n  const handleSubmit = query => {\n    setSearchParams({ query });\n    setPageNumber(1);\n    setMovies([]);\n    setTotalPage(null);\n  };\n\n  const onLoadMore = () => {\n    setPageNumber(prev => prev + 1);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSubmit} />\n\n      <ListMovie\n        movies={movies}\n        // передаємо зворотню адресу MOVIES\n        state={{ from: location }}\n      />\n\n      {/* спінер */}\n      <Loader isLoading={isLoading} />\n\n      {/* кнопка завантажити ще */}\n      {totalPage > pageNumber && <Button loadMore={onLoadMore} />}\n\n      {/* помилка запиту */}\n      {error && <Alert>{error}</Alert>}\n\n      <ScrollToTop />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchTrendMovie","pageNumber","controller","options","signal","params","api_key","language","page","axios","response","fetchMovieByName","query","include_adult","fetchMovieById","movieId","API_URL","fetchCastById","fetchReviewsById","fetchActors","BtnLoadMore","styled","p","theme","colors","accentLight","accentDark","Button","loadMore","onClick","Item","StyledLink","Link","Img","ItemMovie","item","state","posterPath","poster_path","defaultImage","to","id","title","slice","release_date","src","alt","ListMovie","movies","map","movie","List","Alert","props","error","Loader","isLoading","visible","height","width","ariaLabel","wrapperStyle","display","marginTop","marginLeft","marginRight","notificationMassege","notificationOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","SearchbarWrap","SearchForm","SearchInput","SearchBtn","Searchbar","onSubmit","useState","textQuery","setTextQuery","e","preventDefault","toast","type","size","value","onChange","currentTarget","trim","toLowerCase","autocomplete","autoFocus","placeholder","setMovies","setIsLoading","setError","setPageNumber","totalPage","setTotalPage","useSearchParams","searchParams","setSearchParams","location","useLocation","console","log","useEffect","get","getMovieByName","data","results","length","prev","total_pages","message","from"],"sourceRoot":""}