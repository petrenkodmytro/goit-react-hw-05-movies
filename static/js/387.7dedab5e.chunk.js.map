{"version":3,"file":"static/js/387.7dedab5e.chunk.js","mappings":"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","sources":["api/fetchData.jsx","components/ListMovies/ListMovies.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchTrendMovie(pageNumber, controller) {\n  const API_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  // параметри запиту на бекенд\n  const options = {\n    signal: controller.signal,\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n      page: pageNumber,\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchMovieByName(query, pageNumber) {\n  const API_URL = 'https://api.themoviedb.org/3/search/movie';\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      query,\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n      page: pageNumber,\n      include_adult: false,\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchMovieById(movieId) {\n  const API_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchCastById(movieId) {\n  const API_URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchReviewsById(movieId) {\n  const API_URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchActors(query, pageNumber) {\n  const API_URL = query\n    ? 'https://api.themoviedb.org/3/search/person'\n    : 'https://api.themoviedb.org/3/person/popular';\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      query,\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n      page: pageNumber,\n      include_adult: false,\n    },\n  };\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const Alert = styled.p`\n  position: absolute;\n  top: 140px;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: ${props => props.theme.colors.accentLight};\n  padding: 20px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 20px;\n  font-style: italic;\n  color: ${props => props.theme.colors.error};\n`;\n","import { Dna } from 'react-loader-spinner';\n\nexport const Loader = ({ isLoading }) => {\n  return (\n    <Dna\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{\n        display: 'block',\n        marginTop: '5px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      }}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListReviews = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const ItemReview = styled.li`\n  border-bottom: solid 1px ${p => p.theme.colors.accentDark};\n  padding-bottom: 10px;\n`;\n\nexport const AuthorReview = styled.li`\n  font-weight: 700;\n  margin-bottom: 5px;\n`;\n\nexport const LinkDitails = styled.a`\n  display: inline-block;\n  font-style: italic;\n  margin-top: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviewsById } from 'api/fetchData';\nimport { Loader } from 'components/Loader/Loader';\nimport { Alert } from 'components/ListMovies/ListMovies.styled';\nimport {\n  AuthorReview,\n  ItemReview,\n  LinkDitails,\n  ListReviews,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  // console.log(movieId);\n\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getReviewstById = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const response = await fetchReviewsById(movieId);\n        // console.log(response.data.results);\n        setReviews(response.data.results);\n      } catch (error) {\n        setError(error.message);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviewstById();\n  }, [movieId]);\n\n  if (!reviews.length) {\n    return <p>Sorry. We don't have any reviews for this movie.</p>;\n  }\n\n  return (\n    <>\n      <ListReviews>\n        {reviews.map(review => (\n          <ItemReview key={review.id}>\n            <AuthorReview>{review.author}</AuthorReview>\n            <p>{review.content}</p>\n            <LinkDitails href={review.url}>Ditails</LinkDitails>\n          </ItemReview>\n        ))}\n      </ListReviews>\n      {/* спінер */}\n      <Loader isLoading={isLoading} />\n      {/* помилка запиту */}\n      {error && <Alert>{error}</Alert>}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["fetchTrendMovie","pageNumber","controller","options","signal","params","api_key","language","page","axios","response","fetchMovieByName","query","include_adult","fetchMovieById","movieId","API_URL","fetchCastById","fetchReviewsById","fetchActors","List","styled","Alert","props","theme","colors","accentLight","error","Loader","isLoading","visible","height","width","ariaLabel","wrapperStyle","display","marginTop","marginLeft","marginRight","ListReviews","ItemReview","p","accentDark","AuthorReview","LinkDitails","useParams","useState","reviews","setReviews","setIsLoading","setError","useEffect","getReviewstById","data","results","message","console","log","length","map","review","author","content","href","url","id"],"sourceRoot":""}