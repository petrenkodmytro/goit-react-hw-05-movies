{"version":3,"file":"static/js/865.f9f8c303.chunk.js","mappings":"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","sources":["api/fetchData.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/ListMovies/ListMovies.styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchTrendMovie(pageNumber) {\n  const API_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n      page: pageNumber,\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchMovieByName(query, pageNumber) {\n  const API_URL = 'https://api.themoviedb.org/3/search/movie';\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      query,\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n      page: pageNumber,\n      include_adult: false,\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchMovieById(movieId) {\n  const API_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchCastById(movieId) {\n  const API_URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n\nexport async function fetchReviewsById(movieId) {\n  const API_URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  // параметри запиту на бекенд\n  const options = {\n    params: {\n      api_key: '6eb92bed4e8effdfb5cc4dc890c8b1e8',\n      language: 'en-US',\n    },\n  };\n\n  const response = await axios.get(API_URL, options);\n  // console.log(response.data);\n  return response;\n}\n","import styled from 'styled-components';\n\nexport const ListActors = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const ItemActor = styled.li`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  background-color: #fff;\n`;\n\nexport const ImgActor = styled.img`\n  max-width: 175px;\n  object-fit: cover;\n  margin-bottom: 5px;\n  /* border: solid 1px */\n`;\n\nexport const NameActor = styled.span`\n  font-weight: 700;\n  margin-bottom: 5px;\n  max-width: 175px;\n`;\n\nexport const CarecterActor = styled.span`\n  font-style: italic;\n  max-width: 175px;\n  font-size: 14px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCastById } from 'api/fetchData';\nimport { Loader } from 'components/Loader/Loader';\nimport { Alert } from 'components/ListMovies/ListMovies.styled';\nimport {\n  CarecterActor,\n  ImgActor,\n  ItemActor,\n  ListActors,\n  NameActor,\n} from './Cast.styled';\nimport actorImage from '../../images/anonymous.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  // console.log(movieId);\n\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCastById = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const response = await fetchCastById(movieId);\n        // console.log(response.data.cast);\n        setCast(response.data.cast);\n      } catch (error) {\n        setError(error.message);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCastById();\n  }, [movieId]);\n\n  if (!cast.length) {\n    return <p>Sorry. We don't have any information about the cast.</p>;\n  }\n\n  return (\n    <>\n      <ListActors>\n        {cast.map(castItem => (\n          <ItemActor key={castItem.id}>\n            <ImgActor\n              src={\n                castItem.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${castItem.profile_path}`\n                  : actorImage\n              }\n              alt={`${castItem.name}`}\n            />\n            <NameActor>{castItem.name}</NameActor>\n            <CarecterActor>{castItem.character}</CarecterActor>\n          </ItemActor>\n        ))}\n      </ListActors>\n      {/* спінер */}\n      <Loader isLoading={isLoading} />\n      {/* помилка запиту */}\n      {error && <Alert>{error}</Alert>}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const Alert = styled.p`\n  position: absolute;\n  top: 140px;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: ${props => props.theme.colors.accentLight};\n  padding: 20px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 20px;\n  font-style: italic;\n  color: ${props => props.theme.colors.error};\n`;\n","import { Dna } from 'react-loader-spinner';\n\nexport const Loader = ({ isLoading }) => {\n  return (\n    <Dna\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{\n        display: 'block',\n        marginTop: '5px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      }}\n    />\n  );\n};\n"],"names":["fetchTrendMovie","pageNumber","options","params","api_key","language","page","axios","response","fetchMovieByName","query","include_adult","fetchMovieById","movieId","API_URL","fetchCastById","fetchReviewsById","ListActors","styled","ItemActor","ImgActor","NameActor","CarecterActor","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","getCastById","data","message","console","log","length","map","castItem","src","profile_path","actorImage","alt","name","character","id","Loader","List","Alert","props","theme","colors","accentLight","visible","height","width","ariaLabel","wrapperStyle","display","marginTop","marginLeft","marginRight"],"sourceRoot":""}